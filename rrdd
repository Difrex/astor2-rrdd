#!/usr/bin/python2.7
#standard python libs
import logging
import time

#third party libs
from daemon import runner
from rrd import *

class App():
   
    def __init__(self):
        self.stdin_path = '/dev/null'
        self.stdout_path = '/dev/tty'
        self.stderr_path = '/dev/tty'
        self.pidfile_path =  '/var/run/astor2-rrdd/astor2-rrdd.pid'
        self.pidfile_timeout = 5
           
    def run(self):
        while True:
            log_message = commit()
            logger.info(log_message)
            time.sleep(10)

app = App()
logger = logging.getLogger("DaemonLog")
logger.setLevel(logging.INFO)
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
handler = logging.FileHandler("/var/log/astor2-rrdd/astor2-rrdd.log")
handler.setFormatter(formatter)
logger.addHandler(handler)

daemon_runner = runner.DaemonRunner(app)
#This ensures that the logger file handle does not get closed during daemonization
daemon_runner.daemon_context.files_preserve=[handler.stream]
daemon_runner.do_action()
